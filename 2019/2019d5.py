#advent 2019 day 2 
#input formatting
inp = "3,225,1,225,6,6,1100,1,238,225,104,0,1101,72,36,225,1101,87,26,225,2,144,13,224,101,-1872,224,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1102,66,61,225,1102,25,49,224,101,-1225,224,224,4,224,1002,223,8,223,1001,224,5,224,1,223,224,223,1101,35,77,224,101,-112,224,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1002,195,30,224,1001,224,-2550,224,4,224,1002,223,8,223,1001,224,1,224,1,224,223,223,1102,30,44,225,1102,24,21,225,1,170,117,224,101,-46,224,224,4,224,1002,223,8,223,101,5,224,224,1,224,223,223,1102,63,26,225,102,74,114,224,1001,224,-3256,224,4,224,102,8,223,223,1001,224,3,224,1,224,223,223,1101,58,22,225,101,13,17,224,101,-100,224,224,4,224,1002,223,8,223,101,6,224,224,1,224,223,223,1101,85,18,225,1001,44,7,224,101,-68,224,224,4,224,102,8,223,223,1001,224,5,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,7,677,226,224,102,2,223,223,1005,224,329,101,1,223,223,8,677,226,224,1002,223,2,223,1005,224,344,1001,223,1,223,1107,677,677,224,102,2,223,223,1005,224,359,1001,223,1,223,1107,226,677,224,102,2,223,223,1005,224,374,101,1,223,223,7,226,677,224,102,2,223,223,1005,224,389,101,1,223,223,8,226,677,224,1002,223,2,223,1005,224,404,101,1,223,223,1008,226,677,224,1002,223,2,223,1005,224,419,1001,223,1,223,107,677,677,224,102,2,223,223,1005,224,434,101,1,223,223,1108,677,226,224,1002,223,2,223,1006,224,449,101,1,223,223,1108,677,677,224,102,2,223,223,1006,224,464,101,1,223,223,1007,677,226,224,102,2,223,223,1006,224,479,101,1,223,223,1008,226,226,224,102,2,223,223,1006,224,494,101,1,223,223,108,226,226,224,1002,223,2,223,1006,224,509,101,1,223,223,107,226,226,224,102,2,223,223,1006,224,524,101,1,223,223,1107,677,226,224,102,2,223,223,1005,224,539,1001,223,1,223,108,226,677,224,1002,223,2,223,1005,224,554,101,1,223,223,1007,226,226,224,102,2,223,223,1005,224,569,101,1,223,223,8,226,226,224,102,2,223,223,1006,224,584,101,1,223,223,1008,677,677,224,1002,223,2,223,1005,224,599,1001,223,1,223,107,226,677,224,1002,223,2,223,1005,224,614,1001,223,1,223,1108,226,677,224,102,2,223,223,1006,224,629,101,1,223,223,7,677,677,224,1002,223,2,223,1005,224,644,1001,223,1,223,108,677,677,224,102,2,223,223,1005,224,659,101,1,223,223,1007,677,677,224,102,2,223,223,1006,224,674,101,1,223,223,4,223,99,226"
inputs = [1]

print("the 225th input is "+str(inp[225]))
import math 

def form(st): # changing string list to list of int
    linp = str.split(st,",")
    for i in range(0, len(linp)): 
        linp[i] = int(linp[i]) 
    return(linp)


def pieces(n):
    de = n % 100 # cents, referring to the actual instruction from now on
    c = ((n - de) % 1000) / 100 # position or immediate of 1st parameter
    b = ((n - c*100 - de) % 10000) / 1000 # position or immediate of 2nd parameter
    a = (n - 1000*b - 100*c - de) / 10000 # position or immediate of 3rd parameter
    return (int(a),int(b),int(c),int(de))

#print(pieces(12345))
#print(pieces(4))
#print(pieces(12))
#print(pieces(356))
#print(pieces(1234))
#print(pieces(7548))
#print(pieces(0000))

def heaviside(a,b,c): #a = 0 or 1
    return b*(1-a)+c*a
    
#print(heaviside(1,"a","b")) #b 
#print(heaviside(0,"c","d")) #c

def thing3(li): # copied from day 2
    li = form(li)
    i = 0
    while i < len(li):
        p = pieces(li[i]) #p[3] is true instruction, p[2,1,0] are pos/imm values of parm 1,2,3 resp. p() = (a,b,c,de)
        if p[3] == 99:
            break
        elif p[3] == 1:
            print("pieces are",p,str(p[3])+" add")
            print(li[li[i+1]],li[li[i+2]])
            li[li[i+3]] = heaviside(p[2],li[li[i+1]],li[i+1]) + heaviside(p[1],li[li[i+2]],li[i+2]) 
            i += 4
        elif p[3] == 2:
            print("pieces are",p,str(p[3])+" multiply")
            li[li[i+3]] = hvs1*hvs2
            i += 4
        elif p[3] == 3:
            print("pieces are",p,str(p[3])+" store new input")
            i += 2
        elif p[3] == 4:
            print("pieces are",p,str(p[3])+" output value")
            i += 2
        else: 
            return str(p[3])+" no correct instruction"
    return li[0]
    
print(thing3(inp))

